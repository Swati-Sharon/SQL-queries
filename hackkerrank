1. Query all columns (attributes) for every row in the CITY table.
The CITY table is described as follows: ID, NAME, COUNTRYCODE, DISTRICT, POPULATION
>select *
from city

2. Query all columns for all American cities in the CITY table with populations larger than 100000. The CountryCode for America is USA.
   The CITY table is described as follows: ID, NAME, COUNTRYCODE, DISTRICT, POPULATION
> SELECT name 
from CITY
where countrycode="USA"
and population>=120000

3. Query all columns for a city in CITY with the ID 1661.
>SELECT *
FROM city 
where id="1661"

4. Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.
> SELECT * 
FROM CITY
WHERE countrycode="JPN"

5. Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is JPN.
> SELECT name
FROM city
WHERE countrycode="JPN"

6. Query a list of CITY and STATE from the STATION table.
The STATION table is described as follows: ID, CITY, STATE, LAT_N, LONG_W
where LAT_N is the northern latitude and LONG_W is the western longitude.
> SELECT city, state
FROM station

7. Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer.
> SELECT DISTINCT city
FROM station
WHERE id mod 2=0

8. Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.
> SELECT COUNT(CITY)-COUNT(DISTINCT CITY)
FROM station

9. Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.
>SELECT city, length(city)
FROM station 
order by length(city),
city limit 1;
SELECT city, length(city)
FROM station 
order by length(city) DESC,
city limit 1;


10 Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.
> SELECT DISTINCT CITY
FROM STATION
WHERE city like "a%" or city like "e%" or city like "i%" or city like "o%" or city like "u%";
> SELECT DISTINCT CITY
FROM STATION
WHERE city REGEXP '^[AEIOU]';

>SELECT DISTINCT city
FROM   station
WHERE  city RLIKE '^[aeiou]'

11. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.
> SELECT DISTINCT city
FROM station
WHERE city like "%a" or city like "%e" 
or city like "%i" or city like "%o" or city like "%u";

>SELECT DISTINCT city
FROM   station
WHERE  city RLIKE '[aeiou]$'

12. Query the list of CITY names from STATION that have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.
> SELECT DISTINCT CITY
FROM STATION
WHERE (city like "a%" or city like "e%" or city like "i%" or city like "o%" or city like "u%") 
AND (city like "%a" or city like "%e" or city like "%i" or city like "%o" or city like "%u");

> SELECT DISTINCT city
FROM   station
WHERE  city RLIKE '^[aeiou].*[aeiou]$'

> SELECT DISTINCT city
FROM   station
WHERE  city RLIKE '^[aeiouAEIOU].*[aeiouAEIOU]$'

13. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.
>SELECT  distinct city
FROM station
WHERE city RLIKE '^[^aeiou]'

> SELECT distinct city
from station
where city not RLIKE '^[aeiou]'

14. Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.
> SELECT distinct city
FROM station
WHERE NOT (city like "%a" or city like "%e" or city like "%i" or city like "%o" or city like "%u");

>SELECT DISTINCT city
FROM   station
WHERE  city not RLIKE '[aeiou]$'

>SELECT DISTINCT city
FROM   station
WHERE  city RLIKE '[^aeiou]$'
# [^abc] = Any character not listed between the square brackets
# $ = End of string

15. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.
>SELECT  distinct city
FROM station
WHERE city RLIKE '^[^aeiou]' or city RLIKE '[^aeiou]$'

16. Write a query identifying the type of each record in the TRIANGLES table using its three side lengths. Output one of the following statements for each record in the table:
Equilateral: It's a triangle with  sides of equal length.
Isosceles: It's a triangle with  sides of equal length.
Scalene: It's a triangle with  sides of differing lengths.
Not A Triangle: The given values of A, B, and C don't form a triangle.
>SELECT case
WHEN A + B <= C OR A + C <= B OR B + C <= A THEN 'Not A Triangle'
WHEN A = B AND B = C THEN 'Equilateral'
WHEN A = B OR B = C OR A = C THEN 'Isosceles'
ELSE 'Scalene'
END
FROM TRIANGLES;






